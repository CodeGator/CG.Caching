{
  "api/CG.Caching.Cache.html": {
    "href": "api/CG.Caching.Cache.html",
    "title": "Class Cache",
    "keywords": "Class Cache This class is a default implementation of the ICache interface. Inheritance System.Object CG.DisposableBase Cache Implements ICache System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Caching Assembly : CG.Caching.dll Syntax public class Cache : DisposableBase, ICache, IDisposable Constructors Cache(IDistributedCache) This constructor creates a new instance of the Cache class. Declaration public Cache(IDistributedCache cache) Parameters Type Name Description Microsoft.Extensions.Caching.Distributed.IDistributedCache cache The cache to use with the service. Cache(IMemoryCache) This constructor creates a new instance of the Cache class. Declaration public Cache(IMemoryCache cache) Parameters Type Name Description Microsoft.Extensions.Caching.Memory.IMemoryCache cache The cache to use with the service. Properties DistributedCache This property contains a reference to a distributed cache. Declaration protected IDistributedCache DistributedCache { get; set; } Property Value Type Description Microsoft.Extensions.Caching.Distributed.IDistributedCache MemoryCache This property contains a reference to a memory cache. Declaration protected IMemoryCache MemoryCache { get; set; } Property Value Type Description Microsoft.Extensions.Caching.Memory.IMemoryCache Methods Dispose(Boolean) This method is called to dispose of any managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing True to cleanup managed resources; false otherwise. Overrides CG.DisposableBase.Dispose(System.Boolean) GetAsync<T>(String, CancellationToken) This method retrieves an object of type T from the cache, provided a match is found. Declaration public virtual Task<T> GetAsync<T>(string key, CancellationToken cancellationToken = default(CancellationToken)) where T : class Parameters Type Name Description System.String key The name of the cache entry to match. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task <T> A task to perform the operation, that returns an object of type T if a match is found, or NULL otherwise. Type Parameters Name Description T The type of object to retrieve. SetAsync<T>(String, T, CancellationToken) This method puts an object of type T into the cache, using the provided key. Declaration public virtual Task SetAsync<T>(string key, T obj, CancellationToken cancellationToken = default(CancellationToken)) where T : class Parameters Type Name Description System.String key The key of the cache entry to match. T obj The object to be placed into the cache. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Type Parameters Name Description T The type of object to retrieve. Implements ICache System.IDisposable"
  },
  "api/CG.Caching.html": {
    "href": "api/CG.Caching.html",
    "title": "Namespace CG.Caching",
    "keywords": "Namespace CG.Caching Classes Cache This class is a default implementation of the ICache interface. ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering caching extensions. Interfaces ICache This interface represents an object that provides caching services."
  },
  "api/CG.Caching.ICache.html": {
    "href": "api/CG.Caching.ICache.html",
    "title": "Interface ICache",
    "keywords": "Interface ICache This interface represents an object that provides caching services. Inherited Members System.IDisposable.Dispose() Namespace : CG.Caching Assembly : CG.Caching.dll Syntax public interface ICache : IDisposable Methods GetAsync<T>(String, CancellationToken) This method retrieves an object of type T from the cache, provided a match is found. Declaration Task<T> GetAsync<T>(string key, CancellationToken cancellationToken = default(CancellationToken)) where T : class Parameters Type Name Description System.String key The name of the cache entry to match. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task <T> A task to perform the operation, that returns an object of type T if a match is found, or NULL otherwise. Type Parameters Name Description T The type of object to retrieve. SetAsync<T>(String, T, CancellationToken) This method puts an object of type T into the cache, using the provided key. Declaration Task SetAsync<T>(string key, T obj, CancellationToken cancellationToken = default(CancellationToken)) where T : class Parameters Type Name Description System.String key The key of the cache entry to match. T obj The object to be placed into the cache. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Type Parameters Name Description T The type of object to retrieve."
  },
  "api/CG.Caching.ServiceCollectionExtensions.html": {
    "href": "api/CG.Caching.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering caching extensions. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Caching Assembly : CG.Caching.dll Syntax public static class ServiceCollectionExtensions Methods AddCaching(IServiceCollection, IConfiguration, ServiceLifetime) This method adds services and strategies for building a cache service to the specified service collection. Declaration public static IServiceCollection AddCaching(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration the configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection A Microsoft.Extensions.DependencyInjection.IServiceCollection object for building up an strategies for the service. Exceptions Type Condition System.ArgumentException This exception is thrown whenever a required argument is missing or invalid."
  },
  "api/CG.Caching.Strategies.Distributed.html": {
    "href": "api/CG.Caching.Strategies.Distributed.html",
    "title": "Namespace CG.Caching.Strategies.Distributed",
    "keywords": "Namespace CG.Caching.Strategies.Distributed Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.html": {
    "href": "api/CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Caching.Strategies.Distributed Assembly : CG.Caching.dll Syntax public static class ServiceCollectionExtensions Methods AddDistributedMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime) This method registers a distributed caching service with the specified service collection. Declaration public static IServiceCollection AddDistributedMemoryStrategies(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "api/CG.Caching.Strategies.InMemory.html": {
    "href": "api/CG.Caching.Strategies.InMemory.html",
    "title": "Namespace CG.Caching.Strategies.InMemory",
    "keywords": "Namespace CG.Caching.Strategies.InMemory Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.html": {
    "href": "api/CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Caching.Strategies.InMemory Assembly : CG.Caching.dll Syntax public static class ServiceCollectionExtensions Methods AddMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime) This method registers a local memory caching service with the specified service collection. Declaration public static IServiceCollection AddMemoryStrategies(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Caching.dll contains caching extensions used by other CodeGator projects."
  }
}