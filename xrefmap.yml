### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Caching
  name: CG.Caching
  href: api/CG.Caching.html
  commentId: N:CG.Caching
  fullName: CG.Caching
  nameWithType: CG.Caching
- uid: CG.Caching.Cache
  name: Cache
  href: api/CG.Caching.Cache.html
  commentId: T:CG.Caching.Cache
  fullName: CG.Caching.Cache
  nameWithType: Cache
- uid: CG.Caching.Cache.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  name: Cache(IDistributedCache)
  href: api/CG.Caching.Cache.html#CG_Caching_Cache__ctor_Microsoft_Extensions_Caching_Distributed_IDistributedCache_
  commentId: M:CG.Caching.Cache.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  fullName: CG.Caching.Cache.Cache(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  nameWithType: Cache.Cache(IDistributedCache)
- uid: CG.Caching.Cache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  name: Cache(IMemoryCache)
  href: api/CG.Caching.Cache.html#CG_Caching_Cache__ctor_Microsoft_Extensions_Caching_Memory_IMemoryCache_
  commentId: M:CG.Caching.Cache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  fullName: CG.Caching.Cache.Cache(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  nameWithType: Cache.Cache(IMemoryCache)
- uid: CG.Caching.Cache.#ctor*
  name: Cache
  href: api/CG.Caching.Cache.html#CG_Caching_Cache__ctor_
  commentId: Overload:CG.Caching.Cache.#ctor
  isSpec: "True"
  fullName: CG.Caching.Cache.Cache
  nameWithType: Cache.Cache
- uid: CG.Caching.Cache.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_Dispose_System_Boolean_
  commentId: M:CG.Caching.Cache.Dispose(System.Boolean)
  fullName: CG.Caching.Cache.Dispose(System.Boolean)
  nameWithType: Cache.Dispose(Boolean)
- uid: CG.Caching.Cache.Dispose*
  name: Dispose
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_Dispose_
  commentId: Overload:CG.Caching.Cache.Dispose
  isSpec: "True"
  fullName: CG.Caching.Cache.Dispose
  nameWithType: Cache.Dispose
- uid: CG.Caching.Cache.DistributedCache
  name: DistributedCache
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_DistributedCache
  commentId: P:CG.Caching.Cache.DistributedCache
  fullName: CG.Caching.Cache.DistributedCache
  nameWithType: Cache.DistributedCache
- uid: CG.Caching.Cache.DistributedCache*
  name: DistributedCache
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_DistributedCache_
  commentId: Overload:CG.Caching.Cache.DistributedCache
  isSpec: "True"
  fullName: CG.Caching.Cache.DistributedCache
  nameWithType: Cache.DistributedCache
- uid: CG.Caching.Cache.GetAsync*
  name: GetAsync
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_GetAsync_
  commentId: Overload:CG.Caching.Cache.GetAsync
  isSpec: "True"
  fullName: CG.Caching.Cache.GetAsync
  nameWithType: Cache.GetAsync
- uid: CG.Caching.Cache.GetAsync``1(System.String,System.Threading.CancellationToken)
  name: GetAsync<T>(String, CancellationToken)
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_GetAsync__1_System_String_System_Threading_CancellationToken_
  commentId: M:CG.Caching.Cache.GetAsync``1(System.String,System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  fullName: CG.Caching.Cache.GetAsync<T>(System.String, System.Threading.CancellationToken)
  fullName.vb: CG.Caching.Cache.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  nameWithType: Cache.GetAsync<T>(String, CancellationToken)
  nameWithType.vb: Cache.GetAsync(Of T)(String, CancellationToken)
- uid: CG.Caching.Cache.MemoryCache
  name: MemoryCache
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_MemoryCache
  commentId: P:CG.Caching.Cache.MemoryCache
  fullName: CG.Caching.Cache.MemoryCache
  nameWithType: Cache.MemoryCache
- uid: CG.Caching.Cache.MemoryCache*
  name: MemoryCache
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_MemoryCache_
  commentId: Overload:CG.Caching.Cache.MemoryCache
  isSpec: "True"
  fullName: CG.Caching.Cache.MemoryCache
  nameWithType: Cache.MemoryCache
- uid: CG.Caching.Cache.SetAsync*
  name: SetAsync
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_SetAsync_
  commentId: Overload:CG.Caching.Cache.SetAsync
  isSpec: "True"
  fullName: CG.Caching.Cache.SetAsync
  nameWithType: Cache.SetAsync
- uid: CG.Caching.Cache.SetAsync``1(System.String,``0,System.Threading.CancellationToken)
  name: SetAsync<T>(String, T, CancellationToken)
  href: api/CG.Caching.Cache.html#CG_Caching_Cache_SetAsync__1_System_String___0_System_Threading_CancellationToken_
  commentId: M:CG.Caching.Cache.SetAsync``1(System.String,``0,System.Threading.CancellationToken)
  name.vb: SetAsync(Of T)(String, T, CancellationToken)
  fullName: CG.Caching.Cache.SetAsync<T>(System.String, T, System.Threading.CancellationToken)
  fullName.vb: CG.Caching.Cache.SetAsync(Of T)(System.String, T, System.Threading.CancellationToken)
  nameWithType: Cache.SetAsync<T>(String, T, CancellationToken)
  nameWithType.vb: Cache.SetAsync(Of T)(String, T, CancellationToken)
- uid: CG.Caching.ICache
  name: ICache
  href: api/CG.Caching.ICache.html
  commentId: T:CG.Caching.ICache
  fullName: CG.Caching.ICache
  nameWithType: ICache
- uid: CG.Caching.ICache.GetAsync*
  name: GetAsync
  href: api/CG.Caching.ICache.html#CG_Caching_ICache_GetAsync_
  commentId: Overload:CG.Caching.ICache.GetAsync
  isSpec: "True"
  fullName: CG.Caching.ICache.GetAsync
  nameWithType: ICache.GetAsync
- uid: CG.Caching.ICache.GetAsync``1(System.String,System.Threading.CancellationToken)
  name: GetAsync<T>(String, CancellationToken)
  href: api/CG.Caching.ICache.html#CG_Caching_ICache_GetAsync__1_System_String_System_Threading_CancellationToken_
  commentId: M:CG.Caching.ICache.GetAsync``1(System.String,System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  fullName: CG.Caching.ICache.GetAsync<T>(System.String, System.Threading.CancellationToken)
  fullName.vb: CG.Caching.ICache.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  nameWithType: ICache.GetAsync<T>(String, CancellationToken)
  nameWithType.vb: ICache.GetAsync(Of T)(String, CancellationToken)
- uid: CG.Caching.ICache.SetAsync*
  name: SetAsync
  href: api/CG.Caching.ICache.html#CG_Caching_ICache_SetAsync_
  commentId: Overload:CG.Caching.ICache.SetAsync
  isSpec: "True"
  fullName: CG.Caching.ICache.SetAsync
  nameWithType: ICache.SetAsync
- uid: CG.Caching.ICache.SetAsync``1(System.String,``0,System.Threading.CancellationToken)
  name: SetAsync<T>(String, T, CancellationToken)
  href: api/CG.Caching.ICache.html#CG_Caching_ICache_SetAsync__1_System_String___0_System_Threading_CancellationToken_
  commentId: M:CG.Caching.ICache.SetAsync``1(System.String,``0,System.Threading.CancellationToken)
  name.vb: SetAsync(Of T)(String, T, CancellationToken)
  fullName: CG.Caching.ICache.SetAsync<T>(System.String, T, System.Threading.CancellationToken)
  fullName.vb: CG.Caching.ICache.SetAsync(Of T)(System.String, T, System.Threading.CancellationToken)
  nameWithType: ICache.SetAsync<T>(String, T, CancellationToken)
  nameWithType.vb: ICache.SetAsync(Of T)(String, T, CancellationToken)
- uid: CG.Caching.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/CG.Caching.ServiceCollectionExtensions.html
  commentId: T:CG.Caching.ServiceCollectionExtensions
  fullName: CG.Caching.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: CG.Caching.ServiceCollectionExtensions.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: AddCaching(IServiceCollection, IConfiguration, ServiceLifetime)
  href: api/CG.Caching.ServiceCollectionExtensions.html#CG_Caching_ServiceCollectionExtensions_AddCaching_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:CG.Caching.ServiceCollectionExtensions.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName: CG.Caching.ServiceCollectionExtensions.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: ServiceCollectionExtensions.AddCaching(IServiceCollection, IConfiguration, ServiceLifetime)
- uid: CG.Caching.ServiceCollectionExtensions.AddCaching*
  name: AddCaching
  href: api/CG.Caching.ServiceCollectionExtensions.html#CG_Caching_ServiceCollectionExtensions_AddCaching_
  commentId: Overload:CG.Caching.ServiceCollectionExtensions.AddCaching
  isSpec: "True"
  fullName: CG.Caching.ServiceCollectionExtensions.AddCaching
  nameWithType: ServiceCollectionExtensions.AddCaching
- uid: CG.Caching.Strategies.Distributed
  name: CG.Caching.Strategies.Distributed
  href: api/CG.Caching.Strategies.Distributed.html
  commentId: N:CG.Caching.Strategies.Distributed
  fullName: CG.Caching.Strategies.Distributed
  nameWithType: CG.Caching.Strategies.Distributed
- uid: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.html
  commentId: T:CG.Caching.Strategies.Distributed.ServiceCollectionExtensions
  fullName: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: AddDistributedMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime)
  href: api/CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.html#CG_Caching_Strategies_Distributed_ServiceCollectionExtensions_AddDistributedMemoryStrategies_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: ServiceCollectionExtensions.AddDistributedMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime)
- uid: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies*
  name: AddDistributedMemoryStrategies
  href: api/CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.html#CG_Caching_Strategies_Distributed_ServiceCollectionExtensions_AddDistributedMemoryStrategies_
  commentId: Overload:CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies
  isSpec: "True"
  fullName: CG.Caching.Strategies.Distributed.ServiceCollectionExtensions.AddDistributedMemoryStrategies
  nameWithType: ServiceCollectionExtensions.AddDistributedMemoryStrategies
- uid: CG.Caching.Strategies.InMemory
  name: CG.Caching.Strategies.InMemory
  href: api/CG.Caching.Strategies.InMemory.html
  commentId: N:CG.Caching.Strategies.InMemory
  fullName: CG.Caching.Strategies.InMemory
  nameWithType: CG.Caching.Strategies.InMemory
- uid: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.html
  commentId: T:CG.Caching.Strategies.InMemory.ServiceCollectionExtensions
  fullName: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: AddMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime)
  href: api/CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.html#CG_Caching_Strategies_InMemory_ServiceCollectionExtensions_AddMemoryStrategies_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: ServiceCollectionExtensions.AddMemoryStrategies(IServiceCollection, IConfiguration, ServiceLifetime)
- uid: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies*
  name: AddMemoryStrategies
  href: api/CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.html#CG_Caching_Strategies_InMemory_ServiceCollectionExtensions_AddMemoryStrategies_
  commentId: Overload:CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies
  isSpec: "True"
  fullName: CG.Caching.Strategies.InMemory.ServiceCollectionExtensions.AddMemoryStrategies
  nameWithType: ServiceCollectionExtensions.AddMemoryStrategies
