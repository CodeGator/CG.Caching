### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Caching
  name: CG.Caching
  href: api/CG.Caching.html
  commentId: N:CG.Caching
  fullName: CG.Caching
  nameWithType: CG.Caching
- uid: CG.Caching.DistributedCacheExtensions
  name: DistributedCacheExtensions
  href: api/CG.Caching.DistributedCacheExtensions.html
  commentId: T:CG.Caching.DistributedCacheExtensions
  fullName: CG.Caching.DistributedCacheExtensions
  nameWithType: DistributedCacheExtensions
- uid: CG.Caching.DistributedCacheExtensions.GetAsync*
  name: GetAsync
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetAsync_
  commentId: Overload:CG.Caching.DistributedCacheExtensions.GetAsync
  isSpec: "True"
  fullName: CG.Caching.DistributedCacheExtensions.GetAsync
  nameWithType: DistributedCacheExtensions.GetAsync
- uid: CG.Caching.DistributedCacheExtensions.GetAsync``1(IDistributedCache,System.String,CancellationToken)
  name: GetAsync<T>(IDistributedCache, String, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetAsync__1_IDistributedCache_System_String_CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.GetAsync``1(IDistributedCache,System.String,CancellationToken)
  name.vb: GetAsync(Of T)(IDistributedCache, String, CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.GetAsync<T>(IDistributedCache, System.String, CancellationToken)
  fullName.vb: CG.Caching.DistributedCacheExtensions.GetAsync(Of T)(IDistributedCache, System.String, CancellationToken)
  nameWithType: DistributedCacheExtensions.GetAsync<T>(IDistributedCache, String, CancellationToken)
  nameWithType.vb: DistributedCacheExtensions.GetAsync(Of T)(IDistributedCache, String, CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache,System.String,DistributedCacheEntryOptions,Func{System.Byte[]},CancellationToken)
  name: GetOrSetAsync(IDistributedCache, String, DistributedCacheEntryOptions, Func<Byte[]>, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetOrSetAsync_IDistributedCache_System_String_DistributedCacheEntryOptions_Func_System_Byte____CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache,System.String,DistributedCacheEntryOptions,Func{System.Byte[]},CancellationToken)
  name.vb: GetOrSetAsync(IDistributedCache, String, DistributedCacheEntryOptions, Func(Of Byte()), CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, System.String, DistributedCacheEntryOptions, Func<System.Byte[]>, CancellationToken)
  fullName.vb: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, System.String, DistributedCacheEntryOptions, Func(Of System.Byte()), CancellationToken)
  nameWithType: DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, String, DistributedCacheEntryOptions, Func<Byte[]>, CancellationToken)
  nameWithType.vb: DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, String, DistributedCacheEntryOptions, Func(Of Byte()), CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache,System.String,Func{System.Byte[]},CancellationToken)
  name: GetOrSetAsync(IDistributedCache, String, Func<Byte[]>, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetOrSetAsync_IDistributedCache_System_String_Func_System_Byte____CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache,System.String,Func{System.Byte[]},CancellationToken)
  name.vb: GetOrSetAsync(IDistributedCache, String, Func(Of Byte()), CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, System.String, Func<System.Byte[]>, CancellationToken)
  fullName.vb: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, System.String, Func(Of System.Byte()), CancellationToken)
  nameWithType: DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, String, Func<Byte[]>, CancellationToken)
  nameWithType.vb: DistributedCacheExtensions.GetOrSetAsync(IDistributedCache, String, Func(Of Byte()), CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.GetOrSetAsync*
  name: GetOrSetAsync
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetOrSetAsync_
  commentId: Overload:CG.Caching.DistributedCacheExtensions.GetOrSetAsync
  isSpec: "True"
  fullName: CG.Caching.DistributedCacheExtensions.GetOrSetAsync
  nameWithType: DistributedCacheExtensions.GetOrSetAsync
- uid: CG.Caching.DistributedCacheExtensions.GetOrSetAsync``1(IDistributedCache,System.String,DistributedCacheEntryOptions,Func{``0},CancellationToken)
  name: GetOrSetAsync<T>(IDistributedCache, String, DistributedCacheEntryOptions, Func<T>, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetOrSetAsync__1_IDistributedCache_System_String_DistributedCacheEntryOptions_Func___0__CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.GetOrSetAsync``1(IDistributedCache,System.String,DistributedCacheEntryOptions,Func{``0},CancellationToken)
  name.vb: GetOrSetAsync(Of T)(IDistributedCache, String, DistributedCacheEntryOptions, Func(Of T), CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.GetOrSetAsync<T>(IDistributedCache, System.String, DistributedCacheEntryOptions, Func<T>, CancellationToken)
  fullName.vb: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(Of T)(IDistributedCache, System.String, DistributedCacheEntryOptions, Func(Of T), CancellationToken)
  nameWithType: DistributedCacheExtensions.GetOrSetAsync<T>(IDistributedCache, String, DistributedCacheEntryOptions, Func<T>, CancellationToken)
  nameWithType.vb: DistributedCacheExtensions.GetOrSetAsync(Of T)(IDistributedCache, String, DistributedCacheEntryOptions, Func(Of T), CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.GetOrSetAsync``1(IDistributedCache,System.String,Func{``0},CancellationToken)
  name: GetOrSetAsync<T>(IDistributedCache, String, Func<T>, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_GetOrSetAsync__1_IDistributedCache_System_String_Func___0__CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.GetOrSetAsync``1(IDistributedCache,System.String,Func{``0},CancellationToken)
  name.vb: GetOrSetAsync(Of T)(IDistributedCache, String, Func(Of T), CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.GetOrSetAsync<T>(IDistributedCache, System.String, Func<T>, CancellationToken)
  fullName.vb: CG.Caching.DistributedCacheExtensions.GetOrSetAsync(Of T)(IDistributedCache, System.String, Func(Of T), CancellationToken)
  nameWithType: DistributedCacheExtensions.GetOrSetAsync<T>(IDistributedCache, String, Func<T>, CancellationToken)
  nameWithType.vb: DistributedCacheExtensions.GetOrSetAsync(Of T)(IDistributedCache, String, Func(Of T), CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache,System.String,System.Object,CancellationToken)
  name: SetAsync(IDistributedCache, String, Object, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_SetAsync_IDistributedCache_System_String_System_Object_CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache,System.String,System.Object,CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache, System.String, System.Object, CancellationToken)
  nameWithType: DistributedCacheExtensions.SetAsync(IDistributedCache, String, Object, CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache,System.String,System.Object,DistributedCacheEntryOptions,CancellationToken)
  name: SetAsync(IDistributedCache, String, Object, DistributedCacheEntryOptions, CancellationToken)
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_SetAsync_IDistributedCache_System_String_System_Object_DistributedCacheEntryOptions_CancellationToken_
  commentId: M:CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache,System.String,System.Object,DistributedCacheEntryOptions,CancellationToken)
  fullName: CG.Caching.DistributedCacheExtensions.SetAsync(IDistributedCache, System.String, System.Object, DistributedCacheEntryOptions, CancellationToken)
  nameWithType: DistributedCacheExtensions.SetAsync(IDistributedCache, String, Object, DistributedCacheEntryOptions, CancellationToken)
- uid: CG.Caching.DistributedCacheExtensions.SetAsync*
  name: SetAsync
  href: api/CG.Caching.DistributedCacheExtensions.html#CG_Caching_DistributedCacheExtensions_SetAsync_
  commentId: Overload:CG.Caching.DistributedCacheExtensions.SetAsync
  isSpec: "True"
  fullName: CG.Caching.DistributedCacheExtensions.SetAsync
  nameWithType: DistributedCacheExtensions.SetAsync
